#!/usr/bin/lua

---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by sheverdin.
--- DateTime: 7/29/24 2:13 PM
---
---

local tf = require "tf_module"

local localtime = { name = "localtime", str = "\tlocaltime:   " }
local sntp_configList =
{
    tfortis = { name = "zonename",      str = "\ttime zone:   " },
    ntp     = { name = "server",        str = "\tservers:     " }
}

local local_time_cmd = "ubus call system info"
local sntp_config_cmd = "ubus call uci get '{\"config\":\"system\"}'"

local function convertUnixTime(unixTime)
    local date = os.date("*t", unixTime)
    local formattedDate = string.format("%02d-%02d-%02d %02d:%02d:%02d", date.year, date.month, date.day, date.hour, date.min, date.sec)

    return formattedDate
end

local function run_show_sntp()

    local local_time_jsonInfo = tf.collectJsonTable(local_time_cmd)
    local formatted_time = convertUnixTime(local_time_jsonInfo[localtime.name])
    print(localtime.str .. formatted_time)

    local sntp_config_jsonInfo = tf.collectJsonTable(sntp_config_cmd)
    local sntp_timezone_jsonInfo = sntp_config_jsonInfo.values["tfortis"]
    local sntp_ntp_jsonInfo     = sntp_config_jsonInfo.values["ntp"]
    local zoneParts = {}
    local timestr = sntp_configList.tfortis.str .. "GMT "
    for part in string.gmatch(sntp_timezone_jsonInfo[sntp_configList.tfortis.name], "[-+%d]") do
        table.insert(zoneParts, part)
        timestr = timestr .. part
    end
    print(timestr)
    if type(sntp_ntp_jsonInfo[sntp_configList.ntp.name]) ~= nil then
        print(sntp_configList.ntp.str)
        local servers = sntp_ntp_jsonInfo[sntp_configList.ntp.name]
        for i, server in pairs(servers) do
            print("\t\t" .. i .. ":   " .. server)
        end
    end
end

run_show_sntp()


