#!/usr/bin/lua

---
--- Generated by Luanalysis
--- Created by sheverdin.
--- DateTime: 2/14/24 5:35 PM
---

local tf = require "tf_module"

local function main_revert(config_type, cmd_list)
    for i, section in pairs(config_type) do
        local revert_cmd = cmd_list.cmd_ubus .. cmd_list.cmd_revert .. cmd_list.cmd_prefix .. cmd_list.cmd_config .. section .. cmd_list.cmd_suffix
        tf.executeCommand(revert_cmd)
        io.write("configuration \t*", section, "*\t was reverted\n")
    end
end

local function showChanges()
    local section_list = tf.changes(tf.ubusList)
    if section_list == nil then
        io.write("error: >> get changes\n")
    elseif #section_list == 0 then
        io.write("\tno changes\n")
    end
end

local function revertSection()
    local section_list = tf.changes(tf.ubusList)
    main_revert(section_list, tf.ubusList)
end

local function saveChanges()
    tf.saveChanges(1)
end

local change_cmdList = {
    { cmd = "showchanges",      func = showChanges },
    { cmd = "revertsection",    func = revertSection },
    { cmd = "savechanges",      func = saveChanges },
}

local function run_module(cmdList)
    for index, value in pairs(cmdList) do
        if arg[1] == value.cmd then
            value.func(index)
        end
    end
end

local function main_changes()
    print("main changes")
    local errorCode = tf.validateParam(1, arg)
    if errorCode == 0 then
        run_module(change_cmdList)
    end
end

main_changes()
