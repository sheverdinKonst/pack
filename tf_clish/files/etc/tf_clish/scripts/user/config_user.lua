#!/usr/bin/lua

---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by sheverdin
--- DateTime: 6/6/24 6:25 PM
---

local tf = require "tf_module"

local cmd_dmhash = "dmhash "
local cmd_get_user_config = "ubus call uci get '{\"config\":\"rpcd\"}'"
local cmd_add_login = "ubus call uci add '{\"config\":\"rpcd\",\"type\":\"login\"}'"
local cmd_delete_section = "ubus call uci  delete '{\"config\":\"rpcd\",\"section\":\""

local adminRule =
{
    full = "\"read\":[\"*\"], \"write\":[\"*\"]}}'",
    user = "\"read\":[\"*\"]}}'"
}

local function add_user()
    local cmd = cmd_dmhash .. arg[1] .. " " .. arg[2] .. " " .. arg[3] .. " " .. arg[4]
    print("cmd = " .. cmd)
    tf.executeCommand(cmd)

    local user_info = tf.collectJsonTable(cmd_get_user_config)
    user_info = user_info["values"]

    for _, list in pairs(user_info) do
        if list[".type"] ~= nil and list[".type"] == "login" then
            if list["username"] == arg[2] then
                print("User with this name  >" .. arg[2] .. "< is present")
                return 0
            end
        end
    end

    local res = tf.collectJsonTable(cmd_add_login)
    local section = res["section"]
    --print("id section = " .. section)
    local rule = arg[4]

    cmd = "ubus call uci set '{\"config\":\"rpcd\",\"type\":\"login\",\"section\":\"" .. section ..
        "\", \"values\":{\"username\":\"" .. arg[2] .. "\", \"password\":\"" .. "$p$" .. arg[2] .. "\", " ..
        adminRule[rule]
    tf.executeCommand(cmd)
end

local function delete_user()
    local cmd = cmd_dmhash .. arg[1] .. " " .. arg[2] .. " " .. arg[3] .. " " .. arg[4]
    tf.executeCommand(cmd)
    local user_info = tf.collectJsonTable(cmd_get_user_config)
    user_info = user_info["values"]
    local status = "not found"
    local count = 0
    for id, list in pairs(user_info) do
        if list[".type"] ~= nil and list[".type"] == "login" then
            if list["username"] == arg[2] then
                print("User with name  " .. arg[2] .. "< was deleted")
                cmd = cmd_delete_section .. id .. "\"}'"
                tf.executeCommand(cmd)
                status = "found"
                count = count + 1
            end
        end
        if count > 1 then
            print("---->>> error: user with name >" .. arg[2] .. "< more then 1")
        end
    end

    if status == "not found" then
        print("user with name >" .. arg[2] .. "< not found")
    end
end

local usr_cmdList =
{
    { cmd = "-a", func = add_user },
    { cmd = "-d", func = delete_user },
}

local function run_config_user()
    local errorCode = 0
    errorCode = tf.validateParam(4, arg)
    if errorCode == 0 then
        for _, value in pairs(usr_cmdList) do
            if arg[1] == value.cmd then
                value.func(arg[3])
            end
        end
    end
end

run_config_user()
