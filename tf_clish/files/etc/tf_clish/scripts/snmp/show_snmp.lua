#!/usr/bin/lua

---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by sheverdin.
--- DateTime: 7/29/24 4:21 PM
---

local tf = require "tf_module"

local show_snmp_cmd = "ubus call uci get '{\"config\":\"snmpd\"}'"

local snmp_str =
{
    general = {
        "\tstate:               ",
        "\tport:                ",
        "\tversion:             ",
        "\tv3 username:         "
    },

    com2sec = "Community:       ",

    group = {
        "\tgroup:               ",
        "\tversion:             "
    },

    system = {
        "System:\n\tlocation:            ",
        "\tcontact:             ",
        "\tsystem name:         "
    },

    access = {
        "\tgroup:               ",
        "\tread:                ",
        "\twrite:               ",
        "\tversion:             " }
}

local snmpdList =
{
    general     = { config_type = "snmpd", value = { "enabled", "snmp_port", "snmp_version", "snmp_v3_username" }, str = snmp_str.general },
    com2sec     = { config_type = "com2sec", value = "community", str = snmp_str.com2sec },
    group       = { config_type = "group", value = { "group", "version", }, str = snmp_str.group },
    system      = { config_type = "system", value = { "sysLocation", "sysContact", "sysName" }, str = snmp_str.system },
    access      = { config_type = "access", value = { "group", "read", "write", "version" }, str = snmp_str.access },
}

local logicEnum =
{
    "disabled",
    "enabled"
}

local function run_show_snmp()
    local snmp_jsoninfo = tf.collectJsonTable(show_snmp_cmd)
    snmp_jsoninfo = snmp_jsoninfo.values
    local snmp_general = snmpdList.general
    print("General:")
    for _, snmp_dict in pairs(snmp_jsoninfo) do
        --print("snmp_dict[type] = " .. snmp_dict[".type"])
        if snmp_dict[".type"] == snmpdList.general.config_type then
            for i, v in pairs(snmp_general.value) do
                local value = snmp_dict[v]
                if v == "enabled" then
                    value = tonumber(value)
                    value = logicEnum[tonumber(value) + 1]
                elseif v == "snmp_version" then
                    value = value:gsub("/", ", ")
                end
                print(snmpdList.general.str[i] .. value)
            end
        end
    end

    --for _, snmp_dict in pairs(snmp_jsoninfo) do
    --    if snmp_dict[".type"] == snmpdList.agentx.config_type then
    --        local value = snmp_dict[snmpdList.agentx.value]
    --        print(snmpdList.agentx.str .. value)
    --    end
    --end

    print(snmpdList.com2sec.str)
    for _, snmp_dict in pairs(snmp_jsoninfo) do
        if snmp_dict[".type"] == snmpdList.com2sec.config_type then
            local value = snmp_dict[snmpdList.com2sec.value]
            print("\t" .. value)
        end
    end

    --if snmp_dict[".type"] == snmpdList.com2sec6.config_type then
    --  local value = snmp_dict[snmpdList.com2sec6.value]
    --print(snmpdList.com2sec6.str .. value)
    --end

    print("Group:")
    for _, snmp_dict in pairs(snmp_jsoninfo) do
        if snmp_dict[".type"] == snmpdList.group.config_type then
            local snmp_group = snmpdList.group
            local value = ""
            for i, v in pairs(snmp_group.value) do
                value = snmp_dict[v]
                if v == "version" and value == "usm" then
                    value = "v3"
                end
                print(snmp_group.str[i] .. value)
            end
            print("  ...............")
        end
    end

    print("Access:")
    for _, snmp_dict in pairs(snmp_jsoninfo) do
        if snmp_dict[".type"] == snmpdList.access.config_type then
            local snmp_access = snmpdList.access
            local value = ""
            for i, v in pairs(snmp_access.value) do
                --print("v = " .. v)
                value = snmp_dict[v]
                --print("snmp_access.str[i] = " .. snmp_access.str[i])
                print(snmp_access.str[i] .. value)
            end
            print("  ...............")
        end
    end

    --for _, snmp_dict in pairs(snmp_jsoninfo) do
    --    if snmp_dict[".type"] == snmpdList.system.config_type then
    --        local snmp_system = snmpdList.system
    --        local value = ""
    --        for i, v in pairs(snmp_system.value) do
    --            value = snmp_dict[v]
    --            print(snmp_system.str[i] .. value)
    --        end
    --    end
    --end
end

run_show_snmp()



